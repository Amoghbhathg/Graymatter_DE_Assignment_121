Python Assignment

1. Number Categorizer
o Write a Python program that prompts the user to enter a number between 1 and 100.
o If the number is less than 50, print "The number is small."
o If the number is between 50 and 75 (inclusive), print "The number is medium."
o If the number is greater than 75, print "The number is large."
o If the input is not a valid number or not in the range 1 to 100, print "Invalid 
input."
o After printing the message, ask the user if they want to input another number. If 
yes, repeat the process; if no, end the program with a message "Thank you for 
using the program."
o Ensure that the program continues to prompt for new numbers until the user 
decides to stop.
Code:
def categorize_number(number):
    if number < 50:
        return "The number is small."
    elif 50 <= number <= 75:
        return "The number is medium."
    else:
        return "The number is large."

def main():
    while True:
        user_input = input("Enter a number between 1 and 100: ")
        
        try:
            number = float(user_input)
            if number.is_integer():
                number = int(number)
                if 1 <= number <= 100:
                    print((number))
                else:
                    print("Invalid input.")
            else:
                print("Invalid input.")
        except ValueError:
            print("Invalid input.")
        
        continue_prompt = input("Do you want to input another number? (yes/no): ").strip().lower()
        if continue_prompt != 'yes':
            print("Thank you for using the program.")
            break

if __name__ == "__main__":
    main()

2. Even or Odd Checker
 o Write a program that asks the user to enter a number.
o Check if the number is even or odd.
o Print "The number is even" if the number is even, otherwise print "The number 
is odd."
Code:
def checkEvenOrOdd(number):
    if number % 2 == 0:
        return "The number is even."
    else:
        return "The number is odd."

def main():
    user_input = input("Enter a number: ")
    
    try:
        number = float(user_input)
        if number.is_integer():
            number = int(number)
            print(checkEvenOrOdd(number))
        else:
            print("Invalid input. Please enter an integer.")
    except ValueError:
        print("Invalid input. Please enter a valid number.")

if __name__ == "__main__":
    main()

3. Simple Calculator
 o Write a program that performs basic arithmetic operations (addition, subtraction, 
multiplication, and division).
o Prompt the user to enter two numbers and choose an operation (+, -, *, /).
o Perform the chosen operation and display the result.
o Handle division by zero errors with a suitable message.
Code:
def Calculator(num1, num2, operator):
   
    if operator == '+':
        return num1 + num2
    elif operator == '-':
        return num1 - num2
    elif operator == '*':
        return num1 * num2
    elif operator == '/':
        if num2 != 0:
            return num1 / num2
        else:
            return "Error: Division by zero is not allowed."
    else:
        return "Error: Invalid operator. Please choose +, -, *, or /."

def main():
    while True:
        try:
            num1 = float(input("Enter the first number: "))
            num2 = float(input("Enter the second number: "))
            operator = input("Enter the operation (+, -, *, /): ").strip()

            result = Calculator(num1, num2, operator)
            print(f"Result: {result}")

        except ValueError:
            print("Invalid input. Please enter valid numbers.")
        
        continue_prompt = input("Do you want to perform another calculation? (yes/no): ").strip().lower()
        if continue_prompt != 'yes':
            print("Thank you for using the calculator.")
            break

if __name__ == "__main__":
    main()

4. Number Guessing Game
 o Write a program that randomly selects a number between 1 and 10.
o Prompt the user to guess the number.
o Provide feedback if the guess is too high or too low.
o Allow the user to guess again until they ϐind the correct number.
o Print a congratulatory message when the correct number is guessed.
Code:
import random

def numberGuessing():

    Number = random.randint(1, 10)
    
    print("Welcome to the Number Guessing Game!")
    print("I'm thinking of a number between 1 and 10.")
    
    while True:
        try:
            guess = int(input("Enter your guess: "))
            
            if guess < 1 or guess > 10:
                print("Please guess a number between 1 and 10.")
            elif guess < Number:
                print("Too low! Try again.")
            elif guess > Number:
                print("Too high! Try again.")
            else:
                print("Congratulations! You've guessed the correct number.")
                break  
        except ValueError:
            print("Invalid input. Please enter an integer.")

if __name__ == "__main__":
    numberGuessing()

5. Multiplication Table
o Write a program that prompts the user to enter a number.
o Generate and display the multiplication table for that number (from 1 to 10).
Code:
def MultiTable(num):
    print(f"Multiplication table for {num}:")
    for i in range(1, 11):
        print(f"{num} x {i} = {num * i}")

def main():
    while True:
        user_input = input("Enter a number : ")
        
        try:
            num = float(user_input)
            if num.is_integer():
                num = int(num)
                MultiTable(num)
                break  
            else:
                print("Invalid input. Please enter an integer.")
        except ValueError:
            print("Invalid input. Please enter a valid number.")

if __name__ == "__main__":
    main()

6. Factorial Calculator
o Write a program that prompts the user to enter a non-negative integer.
o Calculate the factorial of the number (n!) using a loop.
o Display the result
Code:
def calculate_factorial(n):
    if n == 0:
        return 1  
    fact = 1
    for i in range(1, n + 1):
        fact *= i
    return fact

def main():
    while True:
        inputNumber = input("Enter a  integer to calculate its factorial: ")
        
        try:
            number = int(inputNumber)
            if number >= 0:
                result = calculate_factorial(number)
                print(f"The factorial of {number} is {result}.")
                break 
            else:
                print("Please enter a non-negative integer.")
        except ValueError:
            print("Invalid input. Please enter a valid non-negative integer.")

if __name__ == "__main__":
    main()

7. Palindrome Checker
 o Write a program that prompts the user to enter a word or phrase.
o Check if the entered text is a palindrome (reads the same forwards and 
backwards).
o Print "The text is a palindrome" or "The text is not a palindrome" based on the 
result
Code:
import string

def isPalindrome(text):

    text = text.lower()
    text = text.replace(' ', '')
    
    return text == text[::-1]

def main():
    inputText = input("Enter a word or phrase: ")
    
    if isPalindrome(inputText):
        print("The text is a palindrome.")
    else:
        print("The text is not a palindrome.")

if __name__ == "__main__":
    main()

8. List Sum Calculator
 o Write a program that initializes a list of numbers.
o Calculate and print the sum of all numbers in the list.
o Prompt the user to enter a number to add to the list.
o Update the list and print the new sum.
Code:
def main():
    numbers = [10, 20, 30, 40, 50]
    
    initialSum = sum(numbers)
    print(f"Initial list: {numbers}")
    print(f"Sum of all numbers in the list: {initialSum}")

    while True:
        Number = input("Enter a number to add to the list (or 'exit' to quit): ")
        
        if Number.lower() == 'exit':
            print("Exiting the program.")
            break
        
        try:
            newNumber = float(Number)
            numbers.append(newNumber)
            newSum = sum(numbers)
            print(f"Updated list: {numbers}")
            print(f"New sum of all numbers in the list: {newSum}")
            
        except ValueError:
            print("Invalid input. Please enter a valid number.")

if __name__ == "__main__":
    main()




